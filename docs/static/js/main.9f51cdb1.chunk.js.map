{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","url","title","className","src","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","image","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifApp","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAChDN,EAAc,OAQV,2BACAO,KAAM,OACNC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAE9B,OAEI,yBAAKC,UAAU,QACX,yBAAKC,IAAKH,IACV,2BAAIC,K,uBCRHG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACD,GACRN,EAHa,uDACJ,mCADI,cAGqDO,UAAUF,GAH/D,kBAEL,IAFK,SAIIG,MAAMR,GAJV,cAIbS,EAJa,gBAKEA,EAASC,OALX,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAK,YAAI,CACxBC,GAAID,EAAMC,GACVd,MAAOa,EAAMb,MACbD,IAAG,UAAEc,EAAME,cAAR,aAAE,EAAcC,iBAAiBjB,QAXzB,kBAcVY,GAdU,4CAAH,sDCMPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAC/ByB,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACNlB,EAAQC,GACPkB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIlB,CAACd,IAEGe,EDfyBK,CAAapB,GAAhCW,EAFsB,EAE5BL,KAAcQ,EAFc,EAEdA,QAErB,OACI,oCACA,4BAAKd,GACJc,EAAU,cAAe,8BAE1B,yBAAKjB,UAAU,aAGXc,EAAOH,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eAAaY,IAAKZ,EAAMC,IAAQD,UEd1Ca,EAAS,WAAM,MAIYzC,mBAAS,CAAC,gBAJtB,mBAIjBQ,EAJiB,KAILT,EAJK,KAaxB,OACI,oCACI,sCACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAEpBS,EAAWmB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACIqB,IAAKrB,EACLA,SAAUA,SCtBtCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9f51cdb1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length >2){\r\n            setCategories((categories)=>[inputValue, ...categories]);\r\n        setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n   \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type= \"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card\">\r\n            <img src={url} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n    \r\n}","export const getGifs = async(category) => {\r\n    const apiKey = 'dg7cnV2V77zatxdeYZz7ZhAzO86gqofr'; \r\n    const limit = 10;    \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=${limit}`; \r\n    const response = await fetch(url); \r\n    const {data} = await response.json();\r\n\r\n\r\n    const gifs = data.map (image =>({\r\n            id: image.id, \r\n            title: image.title,\r\n            url: image.images?.downsized_medium.url\r\n        })\r\n    );\r\n      return gifs; \r\n\r\n}","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'; \r\nimport {GifGridItem} from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);  \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading ? 'cargando...': 'Datos cargados exitosamente'}\r\n\r\n        <div className=\"card-grid\">\r\n        {\r\n\r\n            images.map(image => {\r\n                return <GifGridItem key={image.id} {...image}/>\r\n            })\r\n        }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n    \r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\nimport { AddCategory } from '../components/AddCategory';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [], \r\n        loading: true\r\n    }); \r\n    \r\n    useEffect(() =>{\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n\r\n            })\r\n        })\r\n    }, [category]);\r\n\r\n    return state;\r\n    \r\n}\r\n","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\n\r\nexport const GifApp = () => {\r\n    \r\n   // const categories = ['Dragon Ball', 'Chavo del 8', 'Samurai X']\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    /*\r\n    const handleApp = () => {\r\n        const newCategory = ('One Pusch'); \r\n        setCategories([...categories, newCategory])\r\n    };\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <hr />  \r\n            <AddCategory setCategories={setCategories}/>\r\n            {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n        \r\n            }\r\n    </>\r\n        )}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifApp} from './GifApp'\n\nReactDOM.render(\n  <GifApp/>,\n  document.getElementById('root')\n    \n);\n"],"sourceRoot":""}